input{
	file{
		path => "/opt/video/MTS_api*"
		start_position => "beginning"
		discover_interval => 60
	}
}
filter{
	mutate{
	  	split => ["message","|"]
	  	add_field => {"region" => "%{[message][0]}"}
	  	add_field => {"time" => "%{[message][1]}"}
	  	add_field => {"api_num" => "%{[message][2]}"}
	  	convert => {"api_num" => "integer"}
	  	add_field => {"api_times" => "%{[message][3]}"}
	  	convert => {"api_times" => "integer"}
	  	add_field => {"api_failed" => "%{[message][4]}"}
	  	convert => {"api_failed" => "integer"}
	  	add_field => {"api_users" => "%{[message][5]}"}
	}
	ruby{
		code => 'event.set("api_success",event.get("api_times").to_i - event.get("api_failed").to_i)
				 event.set("api_rate",event.get("api_success").to_f / event.get("api_times").to_f)
				 event.set("final_rate",event.get("api_rate").round(4))
				'
	}	
}
output{
	stdout {
		#codec => rubydebug
	}
	influxdb{
		host => "10.185.54.248"
		port => "8086"
		user => "root"
		db => "video"
		measurement => "api"
		send_as_tags => ["region"]
		coerce_values => {
			'num' => 'interger'
			'rate' => 'float'
			'times' => 'integer'
			'users' => 'integer'
		}
		data_points => {
			"region" => "%{region}"
			 "num" => "%{api_num}"
			 "rate" => "%{final_rate}"
			 "times" => "%{api_times}"
			 "users" => "%{api_users}"
		}
	}
}
